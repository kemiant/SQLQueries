--1
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, PHONE_NUMBER
FROM EMPLOYEE
ORDER BY LAST_NAME ASC;

--2
SELECT (FIRST_NAME || ' ' || SUBSTR(MIDDLE_NAME, 1, 1) || '. ' || LAST_NAME) AS member_full_name
FROM MEMBERS
WHERE MIDDLE_NAME IS NOT NULL
AND last_name LIKE 'A%' OR last_name LIKE 'B%' OR last_name LIKE 'C%'
ORDER BY FIRST_NAME ASC, SUBSTR(LAST_NAME, 1, 1) ASC;

--part 2 of question 2
SELECT (FIRST_NAME || ' ' || SUBSTR(MIDDLE_NAME, 1, 1) || '. ' || LAST_NAME) AS member_full_name
FROM MEMBERS
WHERE MIDDLE_NAME IS NOT NULL
AND SUBSTR(last_name, 1, 1) IN ('A', 'B', 'C')
ORDER BY FIRST_NAME ASC, SUBSTR(LAST_NAME, 1, 1) ASC;


--3
SELECT LOAN_TYPE, MEMBER_ID, ORIGINAL_AMOUNT, ORIGINATION_DATE
FROM LOANS
WHERE ORIGINAL_AMOUNT > 30000 AND ORIGINAL_AMOUNT <= 40000
ORDER BY LOAN_TYPE, ORIGINAL_AMOUNT DESC;


--4a
SELECT LOAN_TYPE, MEMBER_ID, ORIGINAL_AMOUNT, ORIGINATION_DATE
FROM LOANS
WHERE ORIGINAL_AMOUNT BETWEEN 30000 AND 40000
ORDER BY LOAN_TYPE ASC, ORIGINAL_AMOUNT DESC;

--4b
SELECT LOAN_TYPE, MEMBER_ID, ORIGINAL_AMOUNT, ORIGINATION_DATE
FROM LOANS
WHERE ORIGINAL_AMOUNT > 30000 AND ORIGINAL_AMOUNT <= 40000

MINUS

SELECT LOAN_TYPE, MEMBER_ID, ORIGINAL_AMOUNT, ORIGINATION_DATE
FROM LOANS
WHERE ORIGINAL_AMOUNT BETWEEN 30000 AND 40000;


--5
SELECT LOAN_TYPE, MEMBER_ID, ORIGINAL_AMOUNT, ORIGINATION_DATE, 
NUMBER_OF_PAYMENTS, PAYMENT_AMOUNT, (NUMBER_OF_PAYMENTS * PAYMENT_AMOUNT) as TOTAL_PAYMENT, 
(NUMBER_OF_PAYMENTS * PAYMENT_AMOUNT - ORIGINAL_AMOUNT) as TOTAL_INTEREST
FROM LOANS
WHERE ROWNUM <= 4
ORDER BY TOTAL_PAYMENT DESC;

--6
SELECT LOAN_NUMBER, TRANSACTION_DATE, AMOUNT, UPDATED_BALANCE,
ROUND(UPDATED_BALANCE / AMOUNT, 2) AS average_number_payment_to_date
FROM TRANSACTION_HISTORY
WHERE UPDATED_BALANCE / AMOUNT > 250
ORDER BY average_number_payment_to_date;


--7
SELECT LOAN_NUMBER, MEMBER_ID, ORIGINATION_DATE, LOAN_NOTES
FROM LOANS
WHERE LOAN_NOTES IS NOT NULL
ORDER BY 1;


--8
SELECT SYSDATE AS today_unformatted,
    TO_CHAR(SYSDATE, 'MM/DD/YYYY') AS today_formatted,
    250000 AS loan,
    0.075 AS mortgage_rate,
    250000 * 0.075 AS annual_interest_amount,
    (250000 * 0.075) * 15 AS total_interest_15_years
FROM DUAL;


--9
SELECT LOAN_NUMBER, LOAN_TYPE, ORIGINAL_AMOUNT, ORIGINATION_DATE
FROM LOANS
WHERE LOAN_TYPE != 'MO'
ORDER BY ORIGINAL_AMOUNT DESC
FETCH FIRST 5 ROWS ONLY;

--10
SELECT BRANCH_STATE, BRANCH_NAME, FIRST_NAME, LAST_NAME, EMP_LEVEL
FROM EMPLOYEE E INNER JOIN BRANCH B
ON E.branch_id = B.branch_id
ORDER BY B.BRANCH_STATE ASC, B.BRANCH_NAME ASC, E.EMP_LEVEL DESC;



--11

SELECT MEMBERS.FIRST_NAME || ' ' || MEMBERS.LAST_NAME AS "Member Name",
    MEMBER_ADDRESS_LINK.ADDRESS_STATUS,
    MEMBER_ADDRESS.ADDRESS_LINE_1,
    MEMBER_ADDRESS.ADDRESS_LINE_2,
    MEMBER_ADDRESS.CITY,
    MEMBER_ADDRESS.MEMBER_STATE,
    MEMBER_ADDRESS.ZIP_CODE,
    MEMBERS.EMAIL_ADDRESS
FROM   MEMBERS   JOIN  MEMBER_ADDRESS_LINK
ON  MEMBERS.MEMBER_ID = MEMBER_ADDRESS_LINK.MEMBER_ID
JOIN  MEMBER_ADDRESS  ON   MEMBER_ADDRESS_LINK.ADDRESS_ID = MEMBER_ADDRESS.ADDRESS_ID
WHERE  MEMBERS.EMAIL_ADDRESS = 'aheapez@naver.com';


--12

SELECT FIRST_NAME, LAST_NAME, PHONE_NUMBER, PHONE_TYPE
FROM MEMBERS M INNER JOIN MEMBER_PHONE P
ON m.member_id = p.member_id
WHERE p.PHONE_NUMBER IS NOT NULL
AND p.MEMBER_ID IN (1001, 1002)
AND p.PHONE_TYPE = 'P';

--13
SELECT m.FIRST_NAME AS member_first_name,
    m.LAST_NAME AS member_last_name,
    e.BRANCH_ID,
    e.FIRST_NAME AS employee_first_name,
    e.LAST_NAME AS employee_last_name,
    l.LOAN_NUMBER,
    l.ORIGINAL_AMOUNT,
    l.ORIGINATION_DATE,
    th.UPDATED_BALANCE
FROM MEMBERS m JOIN LOANS l ON M.member_id = L.member_id
JOIN EMPLOYEE e ON L.employee_id = E.employee_id
JOIN TRANSACTION_HISTORY th ON l.loan_number = th.loan_number
ORDER BY e.branch_id ASC, l.loan_number ASC, th.updated_balance DESC;


--14
SELECT m.MEMBER_ID, p.PHONE_ID
FROM MEMBERS M LEFT OUTER JOIN MEMBER_PHONE P
ON m.MEMBER_ID = p.MEMBER_ID
WHERE p.PHONE_ID IS NULL;

    
--15

SELECT
    CASE 
        WHEN INTEREST_RATE > 5.5 THEN 'High Interest Rate'
        WHEN INTEREST_RATE BETWEEN 3.5 AND 5.5 THEN 'Medium Interest Rate'
        ELSE 'Low Interest Rate'
    END AS INTEREST_TYPE,
    INTEREST_RATE,
    LOAN_TYPE,
    LOAN_NUMBER
FROM LOANS
ORDER BY INTEREST_RATE DESC;




